# Generated by Django 3.0.6 on 2020-06-10 19:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import projects.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now=True)),
                ('password', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', projects.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(blank=True, max_length=60, null=True)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categorys',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=5000)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='Dislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dislike', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dislike',
                'verbose_name_plural': 'Dislikes',
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_name', models.CharField(max_length=500)),
                ('goal_photo', models.ImageField(default='logo.png', upload_to='')),
                ('goal_link', models.CharField(blank=True, max_length=50, null=True)),
                ('goal_docs', models.FileField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, max_length=5000, null=True)),
                ('category', models.CharField(max_length=50, null=True)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Goal',
                'verbose_name_plural': 'Goals',
            },
        ),
        migrations.CreateModel(
            name='Incentive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incentive_type', models.CharField(max_length=50)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Incentive',
                'verbose_name_plural': 'Incentives',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('phone', models.CharField(max_length=12)),
                ('email', models.EmailField(blank=True, max_length=34)),
                ('job_email', models.EmailField(blank=True, max_length=34)),
                ('country', models.CharField(blank=True, default='Tanzania', max_length=50)),
                ('region', models.CharField(blank=True, max_length=260, null=True)),
                ('district', models.CharField(blank=True, max_length=260, null=True)),
                ('professional', models.CharField(blank=True, max_length=50)),
                ('job_title', models.CharField(blank=True, max_length=50)),
                ('institution_name', models.CharField(blank=True, max_length=50, null=True)),
                ('profile_photo', models.ImageField(default='logo.png', max_length=50, upload_to='')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('update_on', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Member',
                'verbose_name_plural': 'Members',
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_name', models.CharField(max_length=600)),
                ('process_links', models.CharField(blank=True, max_length=500, null=True)),
                ('process_photo', models.ImageField(default='logo.png', upload_to='')),
                ('process_docs', models.FileField(blank=True, max_length=500, null=True, upload_to='')),
                ('description', models.TextField(max_length=5000)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member')),
            ],
            options={
                'verbose_name': 'Process',
                'verbose_name_plural': 'Processs',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_title', models.CharField(max_length=500)),
                ('project_photo', models.ImageField(default='logo.png', max_length=50, upload_to='')),
                ('project_files', models.FileField(blank=True, max_length=50, null=True, upload_to='')),
                ('description', models.TextField(blank=True, max_length=5000, null=True)),
                ('due_date', models.DateTimeField()),
                ('project_visibility', models.CharField(default='private', max_length=50)),
                ('is_public', models.BooleanField(default=False)),
                ('is_invitational', models.BooleanField(default=False)),
                ('is_discoverable', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='ProjectIncentive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('incentive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Incentive')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
            options={
                'verbose_name': 'ProjectIncentive',
                'verbose_name_plural': 'ProjectIncentives',
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('docs', models.FileField(blank=True, null=True, upload_to='')),
                ('links', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, max_length=5000, null=True)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member')),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('requirement_photo', models.ImageField(default='logo.png', upload_to='')),
                ('requirement_docs', models.FileField(blank=True, max_length=500, null=True, upload_to='')),
                ('description', models.TextField(blank=True, max_length=5000, null=True)),
                ('requirement_links', models.CharField(blank=True, max_length=50, null=True)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member')),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Goal')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
            options={
                'verbose_name': 'Requirement',
                'verbose_name_plural': 'Requirements',
            },
        ),
        migrations.CreateModel(
            name='RequirementArtifact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artifact_type', models.CharField(max_length=50)),
                ('artifact_content', models.CharField(max_length=500)),
                ('artifact_link', models.CharField(blank=True, max_length=200, null=True)),
                ('uploaded_file', models.FileField(blank=True, max_length=50, null=True, upload_to='')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Requirement')),
            ],
            options={
                'verbose_name': 'RequirementArtifact',
                'verbose_name_plural': 'RequirementArtifacts',
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('scenario_photo', models.ImageField(default='logo.png', upload_to='')),
                ('scenario_docs', models.FileField(blank=True, null=True, upload_to='')),
                ('scenario_links', models.CharField(blank=True, max_length=1500, null=True)),
                ('description', models.TextField(max_length=5000)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Requirement')),
            ],
            options={
                'verbose_name': 'Scenario',
                'verbose_name_plural': 'Scenarios',
            },
        ),
        migrations.CreateModel(
            name='StarRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_stars', models.IntegerField()),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('rated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member')),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=300)),
                ('message', models.TextField(max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='UseCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usecase_name', models.CharField(max_length=500)),
                ('description', models.TextField(max_length=5000)),
                ('usecase_link', models.CharField(max_length=500)),
                ('usecase_photo', models.ImageField(default='logo.png', upload_to='')),
                ('usecase_docs', models.FileField(blank=True, max_length=500, null=True, upload_to='')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Process')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
            options={
                'verbose_name': 'UseCase',
                'verbose_name_plural': 'UseCases',
            },
        ),
        migrations.CreateModel(
            name='Viewpoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewpoint_name', models.CharField(max_length=500)),
                ('viewpoint_links', models.CharField(blank=True, max_length=600, null=True)),
                ('viewpoint_photo', models.ImageField(default='logo.png', max_length=50, upload_to='')),
                ('viewpoint_docs', models.FileField(blank=True, max_length=500, null=True, upload_to='')),
                ('description', models.TextField(max_length=5000)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
            options={
                'verbose_name': 'Viewpoint',
                'verbose_name_plural': 'Viewpoints',
            },
        ),
        migrations.CreateModel(
            name='ViewpointRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Repository')),
                ('viewpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Viewpoint')),
            ],
        ),
        migrations.CreateModel(
            name='ViewPointRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('star_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.StarRate')),
                ('view_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Viewpoint')),
            ],
        ),
        migrations.CreateModel(
            name='ViewpointLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Like')),
                ('view_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Viewpoint')),
            ],
            options={
                'verbose_name': 'ViewpointLike',
                'verbose_name_plural': 'ViewpointLikes',
            },
        ),
        migrations.CreateModel(
            name='ViewpointDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('dislike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Dislike')),
                ('view_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Viewpoint')),
            ],
            options={
                'verbose_name': 'ViewpointDislike',
                'verbose_name_plural': 'ViewpointDislikes',
            },
        ),
        migrations.CreateModel(
            name='ViewPointComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Comment')),
                ('viewpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Viewpoint')),
            ],
            options={
                'verbose_name': 'ViewPointComment',
                'verbose_name_plural': 'ViewPointComments',
            },
        ),
        migrations.CreateModel(
            name='UsecaseRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Repository')),
                ('usecase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.UseCase')),
            ],
        ),
        migrations.CreateModel(
            name='UseCaseRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('star_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.StarRate')),
                ('usecase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.UseCase')),
            ],
            options={
                'verbose_name': 'UseCaseRate',
                'verbose_name_plural': 'UseCaseRates',
            },
        ),
        migrations.CreateModel(
            name='UseCaseLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Like')),
                ('use_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.UseCase')),
            ],
            options={
                'verbose_name': 'UseCaseLike',
                'verbose_name_plural': 'UseCaseLikes',
            },
        ),
        migrations.CreateModel(
            name='UseCaseDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('dislike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Dislike')),
                ('use_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.UseCase')),
            ],
            options={
                'verbose_name': 'UseCaseDislike',
                'verbose_name_plural': 'UseCaseDislikes',
            },
        ),
        migrations.CreateModel(
            name='UseCaseComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Comment')),
                ('usecase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.UseCase')),
            ],
            options={
                'verbose_name': 'UseCaseComment',
                'verbose_name_plural': 'UseCaseComments',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector_name', models.CharField(max_length=50)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Repository')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Scenario')),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Scenario')),
                ('star_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.StarRate')),
            ],
            options={
                'verbose_name': 'ScenarioRate',
                'verbose_name_plural': 'ScenarioRates',
            },
        ),
        migrations.CreateModel(
            name='ScenarioLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Like')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Scenario')),
            ],
            options={
                'verbose_name': 'ScenarioLike',
                'verbose_name_plural': 'ScenarioLikes',
            },
        ),
        migrations.CreateModel(
            name='ScenarioDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('dislike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Dislike')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Scenario')),
            ],
            options={
                'verbose_name': 'ScenarioDislike',
                'verbose_name_plural': 'ScenarioDislikes',
            },
        ),
        migrations.CreateModel(
            name='ScenarioComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Comment')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Scenario')),
            ],
            options={
                'verbose_name': 'ScenarioComment',
                'verbose_name_plural': 'ScenarioComments',
            },
        ),
        migrations.CreateModel(
            name='RequirementRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Repository')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Requirement')),
            ],
        ),
        migrations.CreateModel(
            name='RequirementRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Requirement')),
                ('star_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.StarRate')),
            ],
            options={
                'verbose_name': 'RequirementRate',
                'verbose_name_plural': 'RequirementRates',
            },
        ),
        migrations.CreateModel(
            name='RequirementLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Like')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Requirement')),
            ],
            options={
                'verbose_name': 'RequirementLike',
                'verbose_name_plural': 'RequirementLikes',
            },
        ),
        migrations.CreateModel(
            name='RequirementDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('dislike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Dislike')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Requirement')),
            ],
            options={
                'verbose_name': 'RequiremetDislike',
                'verbose_name_plural': 'RequiremetDislikes',
            },
        ),
        migrations.CreateModel(
            name='RequirementComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Comment')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Requirement')),
            ],
            options={
                'verbose_name': 'RequirementComment',
                'verbose_name_plural': 'RequirementComments',
            },
        ),
        migrations.CreateModel(
            name='RequirementArtifactRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('requiremet_artifact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.RequirementArtifact')),
                ('star_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.StarRate')),
            ],
            options={
                'verbose_name': 'RequirementArtifactRate',
                'verbose_name_plural': 'RequirementArtifactRates',
            },
        ),
        migrations.CreateModel(
            name='RequirementArtifactLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Like')),
                ('requirement_artifact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.RequirementArtifact')),
            ],
            options={
                'verbose_name': 'RequirementArtifactLike',
                'verbose_name_plural': 'RequirementArtifactLikes',
            },
        ),
        migrations.CreateModel(
            name='RequirementArtifactDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('dislike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Dislike')),
                ('requirement_artifact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.RequirementArtifact')),
            ],
            options={
                'verbose_name': 'RequirementArtifactDislike',
                'verbose_name_plural': 'RequirementArtifactDislikes',
            },
        ),
        migrations.CreateModel(
            name='ProjectSector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Sector')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Repository')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
                ('star_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.StarRate')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_role', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
            options={
                'verbose_name': 'ProjectMembership',
                'verbose_name_plural': 'ProjectMemberships',
            },
        ),
        migrations.CreateModel(
            name='ProjectMemberIncentive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=5000)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member')),
                ('projectincetive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.ProjectIncentive')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Like')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
            options={
                'verbose_name': 'ProjectLike',
                'verbose_name_plural': 'ProjectLikes',
            },
        ),
        migrations.CreateModel(
            name='ProjectDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('dislike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Dislike')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
            options={
                'verbose_name': 'ProjectDislike',
                'verbose_name_plural': 'ProjectDislikes',
            },
        ),
        migrations.CreateModel(
            name='ProjectComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Comment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
            options={
                'verbose_name': 'ProjectComment',
                'verbose_name_plural': 'ProjectComments',
            },
        ),
        migrations.CreateModel(
            name='ProcessRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Process')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Repository')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Process')),
                ('star_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.StarRate')),
            ],
            options={
                'verbose_name': 'ProcessRate',
                'verbose_name_plural': 'ProcessRates',
            },
        ),
        migrations.CreateModel(
            name='ProcessLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Like')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Process')),
            ],
            options={
                'verbose_name': 'ProcessLike',
                'verbose_name_plural': 'ProcessLikes',
            },
        ),
        migrations.CreateModel(
            name='ProcessDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('dislike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Dislike')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Process')),
            ],
            options={
                'verbose_name': 'ProcessDislike',
                'verbose_name_plural': 'ProcessDislikes',
            },
        ),
        migrations.CreateModel(
            name='ProcessComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Comment')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Process')),
            ],
            options={
                'verbose_name': 'ProcessComment',
                'verbose_name_plural': 'ProcessComments',
            },
        ),
        migrations.AddField(
            model_name='process',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
        migrations.AddField(
            model_name='process',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Scenario'),
        ),
        migrations.CreateModel(
            name='LoginLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(auto_now=True)),
                ('logout_time', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'LoginLog',
                'verbose_name_plural': 'LoginLogs',
            },
        ),
        migrations.AddField(
            model_name='like',
            name='liked_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member'),
        ),
        migrations.CreateModel(
            name='GoalRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Goal')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Repository')),
            ],
        ),
        migrations.CreateModel(
            name='GoalRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Goal')),
                ('star_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.StarRate')),
            ],
            options={
                'verbose_name': 'GoalRate',
                'verbose_name_plural': 'GoalRates',
            },
        ),
        migrations.CreateModel(
            name='GoalLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Goal')),
                ('like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Like')),
            ],
            options={
                'verbose_name': 'GoalLike',
                'verbose_name_plural': 'GoalLikes',
            },
        ),
        migrations.CreateModel(
            name='GoalDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('dislike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Dislike')),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Goal')),
            ],
            options={
                'verbose_name': 'GoalDislike',
                'verbose_name_plural': 'GoalDislikes',
            },
        ),
        migrations.CreateModel(
            name='GoalComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Comment')),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Goal')),
            ],
            options={
                'verbose_name': 'GoalComment',
                'verbose_name_plural': 'GoalComments',
            },
        ),
        migrations.AddField(
            model_name='goal',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member'),
        ),
        migrations.AddField(
            model_name='goal',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
        migrations.AddField(
            model_name='goal',
            name='viewpoint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Viewpoint'),
        ),
        migrations.AddField(
            model_name='dislike',
            name='disliked_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member'),
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Comment')),
                ('like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Like')),
            ],
            options={
                'verbose_name': 'CommentLike',
                'verbose_name_plural': 'CommentLikes',
            },
        ),
        migrations.CreateModel(
            name='CommentDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Comment')),
                ('dislike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Dislike')),
            ],
            options={
                'verbose_name': 'CommentDislike',
                'verbose_name_plural': 'CommentDislikes',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='commented_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member'),
        ),
        migrations.CreateModel(
            name='ArtifactComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Comment')),
                ('requirement_artifact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.RequirementArtifact')),
            ],
            options={
                'verbose_name': 'ArtifactComment',
                'verbose_name_plural': 'ArtifactComments',
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.TextField(max_length=5000)),
                ('link', models.CharField(max_length=500)),
                ('status', models.CharField(default='seen', max_length=50)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('affected_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Member')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ActivityLog',
                'verbose_name_plural': 'ActivityLogs',
            },
        ),
    ]
